{
  "report_metadata": {
    "scan_id": "77d24c64-d706-4d53-9b11-9d5862eded23",
    "repository_url": "https://github.com/spring-projects/spring-petclinic",
    "branch": "main",
    "generated_at": "2025-07-13T16:32:31.023973",
    "version": "2.0.0",
    "llm_source": "local",
    "llm_model": "meta-llama-3.1-8b-instruct"
  },
  "scan_metadata": {
    "scan_duration": 0,
    "total_files": 112,
    "total_lines": 14402,
    "timestamp": "2025-07-13T16:32:31.023983",
    "project_name": "spring-projects/spring-petclinic",
    "project_path": "https://github.com/spring-projects/spring-petclinic",
    "repository_url": "https://github.com/spring-projects/spring-petclinic"
  },
  "languages_detected": [
    "Docker",
    "JSON",
    "YAML",
    "Batch",
    "XML",
    "Gradle",
    "Java",
    "SQL",
    "CSS",
    "HTML",
    "SCSS"
  ],
  "gates": [
    {
      "name": "STRUCTURED_LOGS",
      "display_name": "Logs Searchable/Available",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Logs Searchable/Available"
      ],
      "category": "Logging",
      "priority": "high",
      "description": "Ensure logs are structured and searchable for operational monitoring",
      "patterns_used": 2,
      "matches_found": 0,
      "recommendations": [
        "Implement Logs Searchable/Available throughout your codebase",
        "Focus on ensure logs are structured and searchable for operational monitoring"
      ],
      "pattern_description": "Ensure logs are structured and searchable for operational monitoring by using a standard logging format.",
      "pattern_significance": "This gate is significant because it helps in log analysis, troubleshooting, and compliance with regulatory requirements.",
      "expected": 2,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "AVOID_LOGGING_SECRETS",
      "display_name": "Avoid Logging Confidential Data",
      "status": "PASS",
      "score": 100.0,
      "details": [
        "No matches found for Avoid Logging Confidential Data"
      ],
      "category": "Security",
      "priority": "critical",
      "description": "Prevent sensitive data from being logged accidentally",
      "patterns_used": 2,
      "matches_found": 0,
      "recommendations": [
        "Good implementation of Avoid Logging Confidential Data",
        "Consider optimizing existing patterns"
      ],
      "pattern_description": "Prevent sensitive data from being logged accidentally by excluding secrets from logs.",
      "pattern_significance": "This gate is significant because it prevents sensitive information from being exposed, ensuring security and compliance.",
      "expected": 2,
      "found": 0,
      "coverage": 100.0,
      "quality_score": 100.0,
      "matches": []
    },
    {
      "name": "AUDIT_TRAIL",
      "display_name": "Create Audit Trail Logs",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Create Audit Trail Logs"
      ],
      "category": "Compliance",
      "priority": "high",
      "description": "Log critical business operations for audit compliance",
      "patterns_used": 1,
      "matches_found": 0,
      "recommendations": [
        "Implement Create Audit Trail Logs throughout your codebase",
        "Focus on log critical business operations for audit compliance"
      ],
      "pattern_description": "Log critical business operations for audit compliance by tracking significant events.",
      "pattern_significance": "This gate is significant because it helps in auditing, regulatory compliance, and ensuring accountability.",
      "expected": 1,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "CORRELATION_ID",
      "display_name": "Tracking ID for Logs",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Tracking ID for Logs"
      ],
      "category": "Observability",
      "priority": "medium",
      "description": "Include correlation IDs for distributed tracing",
      "patterns_used": 1,
      "matches_found": 0,
      "recommendations": [
        "Implement Tracking ID for Logs throughout your codebase",
        "Focus on include correlation ids for distributed tracing"
      ],
      "pattern_description": "Include correlation IDs for distributed tracing by tracking request correlations.",
      "pattern_significance": "This gate is significant because it helps in debugging, performance optimization, and ensuring system reliability.",
      "expected": 1,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "LOG_API_CALLS",
      "display_name": "Log REST API Calls",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Log REST API Calls"
      ],
      "category": "API",
      "priority": "medium",
      "description": "Log all API requests and responses for monitoring",
      "patterns_used": 1,
      "matches_found": 0,
      "recommendations": [
        "Implement Log REST API Calls throughout your codebase",
        "Focus on log all api requests and responses for monitoring"
      ],
      "pattern_description": "Log all API requests and responses for monitoring by tracking API interactions.",
      "pattern_significance": "This gate is significant because it helps in monitoring, troubleshooting, and ensuring system reliability.",
      "expected": 1,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "LOG_APPLICATION_MESSAGES",
      "display_name": "Log Application Messages",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Log Application Messages"
      ],
      "category": "Logging",
      "priority": "medium",
      "description": "Log important application state changes and events",
      "patterns_used": 1,
      "matches_found": 0,
      "recommendations": [
        "Implement Log Application Messages throughout your codebase",
        "Focus on log important application state changes and events"
      ],
      "pattern_description": "Log important application state changes and events for monitoring by tracking application messages.",
      "pattern_significance": "This gate is significant because it helps in monitoring, troubleshooting, and ensuring system reliability.",
      "expected": 1,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "UI_ERRORS",
      "display_name": "Client UI Errors Logged",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Client UI Errors Logged"
      ],
      "category": "Frontend",
      "priority": "medium",
      "description": "Capture and log client-side UI errors",
      "patterns_used": 1,
      "matches_found": 0,
      "recommendations": [
        "Implement Client UI Errors Logged throughout your codebase",
        "Focus on capture and log client-side ui errors"
      ],
      "pattern_description": "Capture and log client-side UI errors for monitoring by tracking user interface issues.",
      "pattern_significance": "This gate is significant because it helps in monitoring, troubleshooting, and ensuring system reliability.",
      "expected": 1,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "RETRY_LOGIC",
      "display_name": "Retry Logic",
      "status": "FAIL",
      "score": 8.928571428571427,
      "details": [
        "Found 2 matches across 1 files",
        "  src/main/java/org/springframework/samples/petclinic/system/CrashController.java:22 - exception",
        "  src/main/java/org/springframework/samples/petclinic/system/CrashController.java:34 - exception"
      ],
      "category": "Reliability",
      "priority": "high",
      "description": "Implement retry mechanisms for resilient operations",
      "patterns_used": 2,
      "matches_found": 2,
      "recommendations": [
        "Implement Retry Logic throughout your codebase",
        "Focus on implement retry mechanisms for resilient operations"
      ],
      "pattern_description": "Implement retry mechanisms for resilient operations by tracking retries and exceptions.",
      "pattern_significance": "This gate is significant because it helps in ensuring system reliability, performance optimization, and debugging.",
      "expected": 2,
      "found": 2,
      "coverage": 8.928571428571427,
      "quality_score": 8.928571428571427,
      "matches": []
    },
    {
      "name": "TIMEOUTS",
      "display_name": "Timeouts in IO Ops",
      "status": "FAIL",
      "score": 8.928571428571427,
      "details": [
        "Found 2 matches across 1 files",
        "  src/main/java/org/springframework/samples/petclinic/system/CrashController.java:22 - exception",
        "  src/main/java/org/springframework/samples/petclinic/system/CrashController.java:34 - exception"
      ],
      "category": "Reliability",
      "priority": "high",
      "description": "Set appropriate timeouts for I/O operations",
      "patterns_used": 2,
      "matches_found": 2,
      "recommendations": [
        "Implement Timeouts in IO Ops throughout your codebase",
        "Focus on set appropriate timeouts for i/o operations"
      ],
      "pattern_description": "Set appropriate timeouts for I/O operations by tracking timeouts and exceptions.",
      "pattern_significance": "This gate is significant because it helps in ensuring system reliability, performance optimization, and debugging.",
      "expected": 2,
      "found": 2,
      "coverage": 8.928571428571427,
      "quality_score": 8.928571428571427,
      "matches": []
    },
    {
      "name": "THROTTLING",
      "display_name": "Throttling & Drop Request",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Throttling & Drop Request"
      ],
      "category": "Performance",
      "priority": "medium",
      "description": "Implement rate limiting and request throttling",
      "patterns_used": 2,
      "matches_found": 0,
      "recommendations": [
        "Implement Throttling & Drop Request throughout your codebase",
        "Focus on implement rate limiting and request throttling"
      ],
      "pattern_description": "Implement rate limiting and request throttling for system security by tracking rate limitations.",
      "pattern_significance": "This gate is significant because it helps in ensuring system security, performance optimization, and debugging.",
      "expected": 2,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "CIRCUIT_BREAKERS",
      "display_name": "Circuit Breakers",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Circuit Breakers"
      ],
      "category": "Reliability",
      "priority": "high",
      "description": "Implement circuit breaker pattern for fault tolerance",
      "patterns_used": 2,
      "matches_found": 0,
      "recommendations": [
        "Implement Circuit Breakers throughout your codebase",
        "Focus on implement circuit breaker pattern for fault tolerance"
      ],
      "pattern_description": "Implement circuit breaker pattern for fault tolerance by tracking circuit breakers.",
      "pattern_significance": "This gate is significant because it helps in ensuring system reliability, performance optimization, and debugging.",
      "expected": 2,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "ERROR_LOGS",
      "display_name": "Log System Errors",
      "status": "FAIL",
      "score": 17.857142857142854,
      "details": [
        "Found 9 matches across 2 files",
        "  src/main/java/org/springframework/samples/petclinic/owner/OwnerController.java:78 - error",
        "  src/main/java/org/springframework/samples/petclinic/owner/OwnerController.java:78 - error",
        "  src/main/java/org/springframework/samples/petclinic/owner/OwnerController.java:142 - error",
        "  ... and 6 more matches"
      ],
      "category": "Error Handling",
      "priority": "high",
      "description": "Comprehensive error logging and exception handling",
      "patterns_used": 2,
      "matches_found": 9,
      "recommendations": [
        "Implement Log System Errors throughout your codebase",
        "Focus on comprehensive error logging and exception handling"
      ],
      "pattern_description": "Comprehensive error logging and exception handling for system reliability by tracking errors.",
      "pattern_significance": "This gate is significant because it helps in ensuring system reliability, performance optimization, and debugging.",
      "expected": 2,
      "found": 9,
      "coverage": 17.857142857142854,
      "quality_score": 17.857142857142854,
      "matches": []
    },
    {
      "name": "HTTP_CODES",
      "display_name": "HTTP Error Codes",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for HTTP Error Codes"
      ],
      "category": "API",
      "priority": "medium",
      "description": "Use appropriate HTTP status codes for API responses",
      "patterns_used": 2,
      "matches_found": 0,
      "recommendations": [
        "Implement HTTP Error Codes throughout your codebase",
        "Focus on use appropriate http status codes for api responses"
      ],
      "pattern_description": "Use appropriate HTTP status codes for API responses by tracking HTTP status codes.",
      "pattern_significance": "This gate is significant because it helps in ensuring system reliability, performance optimization, and debugging.",
      "expected": 2,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "UI_ERROR_TOOLS",
      "display_name": "Client Error Tracking",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Client Error Tracking"
      ],
      "category": "Frontend",
      "priority": "medium",
      "description": "Integrate client-side error tracking tools",
      "patterns_used": 2,
      "matches_found": 0,
      "recommendations": [
        "Implement Client Error Tracking throughout your codebase",
        "Focus on integrate client-side error tracking tools"
      ],
      "pattern_description": "Integrate client-side error tracking tools for system reliability by tracking UI errors.",
      "pattern_significance": "This gate is significant because it helps in ensuring system reliability, performance optimization, and debugging.",
      "expected": 2,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "AUTOMATED_TESTS",
      "display_name": "Automated Tests",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Automated Tests"
      ],
      "category": "Testing",
      "priority": "high",
      "description": "Comprehensive automated test coverage",
      "patterns_used": 2,
      "matches_found": 0,
      "recommendations": [
        "Implement Automated Tests throughout your codebase",
        "Focus on comprehensive automated test coverage"
      ],
      "pattern_description": "Comprehensive automated test coverage for system reliability by tracking tests.",
      "pattern_significance": "This gate is significant because it helps in ensuring system reliability, performance optimization, and debugging.",
      "expected": 2,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    }
  ],
  "score": 9.047619047619047,
  "overall_score": 9.047619047619047,
  "passed_gates": 1,
  "warning_gates": 0,
  "failed_gates": 14,
  "not_applicable_gates": 0,
  "total_applicable_gates": 15,
  "total_all_gates": 15,
  "critical_issues": [],
  "recommendations": [
    "Implement Logs Searchable/Available throughout your codebase",
    "Focus on ensure logs are structured and searchable for operational monitoring",
    "Good implementation of Avoid Logging Confidential Data",
    "Consider optimizing existing patterns",
    "Implement Create Audit Trail Logs throughout your codebase",
    "Focus on log critical business operations for audit compliance",
    "Implement Tracking ID for Logs throughout your codebase",
    "Focus on include correlation ids for distributed tracing",
    "Implement Log REST API Calls throughout your codebase",
    "Focus on log all api requests and responses for monitoring",
    "Implement Log Application Messages throughout your codebase",
    "Focus on log important application state changes and events",
    "Implement Client UI Errors Logged throughout your codebase",
    "Focus on capture and log client-side ui errors",
    "Implement Retry Logic throughout your codebase",
    "Focus on implement retry mechanisms for resilient operations",
    "Implement Timeouts in IO Ops throughout your codebase",
    "Focus on set appropriate timeouts for i/o operations",
    "Implement Throttling & Drop Request throughout your codebase",
    "Focus on implement rate limiting and request throttling",
    "Implement Circuit Breakers throughout your codebase",
    "Focus on implement circuit breaker pattern for fault tolerance",
    "Implement Log System Errors throughout your codebase",
    "Focus on comprehensive error logging and exception handling",
    "Implement HTTP Error Codes throughout your codebase",
    "Focus on use appropriate http status codes for api responses",
    "Implement Client Error Tracking throughout your codebase",
    "Focus on integrate client-side error tracking tools",
    "Implement Automated Tests throughout your codebase",
    "Focus on comprehensive automated test coverage"
  ]
}