{
  "report_metadata": {
    "scan_id": "52b97924-244d-4b1f-9fcd-c1e8e2a8abd2",
    "repository_url": "https://github.com/spring-projects/spring-petclinic",
    "branch": "main",
    "generated_at": "2025-07-13T18:10:03.939860",
    "version": "2.0.0",
    "llm_source": "fallback",
    "llm_model": "built-in"
  },
  "scan_metadata": {
    "scan_duration": 0,
    "total_files": 112,
    "total_lines": 14402,
    "timestamp": "2025-07-13T18:10:03.939870",
    "project_name": "spring-projects/spring-petclinic",
    "project_path": "https://github.com/spring-projects/spring-petclinic",
    "repository_url": "https://github.com/spring-projects/spring-petclinic"
  },
  "languages_detected": [
    "Docker",
    "JSON",
    "YAML",
    "Batch",
    "XML",
    "Gradle",
    "Java",
    "SQL",
    "CSS",
    "HTML",
    "SCSS"
  ],
  "gates": [
    {
      "name": "STRUCTURED_LOGS",
      "display_name": "Logs Searchable/Available",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Logs Searchable/Available"
      ],
      "category": "Logging",
      "priority": "high",
      "description": "Ensure logs are structured and searchable for operational monitoring",
      "patterns_used": 5,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement Logs Searchable/Available throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on ensure logs are structured and searchable for operational monitoring",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for STRUCTURED_LOGS - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 5,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "AVOID_LOGGING_SECRETS",
      "display_name": "Avoid Logging Confidential Data",
      "status": "PASS",
      "score": 100.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Avoid Logging Confidential Data"
      ],
      "category": "Security",
      "priority": "critical",
      "description": "Prevent sensitive data from being logged accidentally",
      "patterns_used": 6,
      "matches_found": 0,
      "recommendations": [
        "Good implementation of Avoid Logging Confidential Data",
        "Consider optimizing existing patterns",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for AVOID_LOGGING_SECRETS - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 6,
      "found": 0,
      "coverage": 100.0,
      "quality_score": 100.0,
      "matches": []
    },
    {
      "name": "AUDIT_TRAIL",
      "display_name": "Create Audit Trail Logs",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Create Audit Trail Logs"
      ],
      "category": "Compliance",
      "priority": "high",
      "description": "Log critical business operations for audit compliance",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement Create Audit Trail Logs throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on log critical business operations for audit compliance",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for AUDIT_TRAIL - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "CORRELATION_ID",
      "display_name": "Tracking ID for Logs",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Tracking ID for Logs"
      ],
      "category": "Observability",
      "priority": "medium",
      "description": "Include correlation IDs for distributed tracing",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement Tracking ID for Logs throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on include correlation ids for distributed tracing",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for CORRELATION_ID - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "LOG_API_CALLS",
      "display_name": "Log REST API Calls",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Log REST API Calls"
      ],
      "category": "API",
      "priority": "medium",
      "description": "Log all API requests and responses for monitoring",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement Log REST API Calls throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on log all api requests and responses for monitoring",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for LOG_API_CALLS - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "LOG_APPLICATION_MESSAGES",
      "display_name": "Log Application Messages",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Log Application Messages"
      ],
      "category": "Logging",
      "priority": "medium",
      "description": "Log important application state changes and events",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement Log Application Messages throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on log important application state changes and events",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for LOG_APPLICATION_MESSAGES - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "UI_ERRORS",
      "display_name": "Client UI Errors Logged",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Client UI Errors Logged"
      ],
      "category": "Frontend",
      "priority": "medium",
      "description": "Capture and log client-side UI errors",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement Client UI Errors Logged throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on capture and log client-side ui errors",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for UI_ERRORS - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "RETRY_LOGIC",
      "display_name": "Retry Logic",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Retry Logic"
      ],
      "category": "Reliability",
      "priority": "high",
      "description": "Implement retry mechanisms for resilient operations",
      "patterns_used": 5,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement Retry Logic throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on implement retry mechanisms for resilient operations",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for RETRY_LOGIC - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 5,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "TIMEOUTS",
      "display_name": "Timeouts in IO Ops",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Timeouts in IO Ops"
      ],
      "category": "Reliability",
      "priority": "high",
      "description": "Set appropriate timeouts for I/O operations",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement Timeouts in IO Ops throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on set appropriate timeouts for i/o operations",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for TIMEOUTS - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "THROTTLING",
      "display_name": "Throttling & Drop Request",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Throttling & Drop Request"
      ],
      "category": "Performance",
      "priority": "medium",
      "description": "Implement rate limiting and request throttling",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement Throttling & Drop Request throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on implement rate limiting and request throttling",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for THROTTLING - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "CIRCUIT_BREAKERS",
      "display_name": "Circuit Breakers",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Circuit Breakers"
      ],
      "category": "Reliability",
      "priority": "high",
      "description": "Implement circuit breaker pattern for fault tolerance",
      "patterns_used": 5,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement Circuit Breakers throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on implement circuit breaker pattern for fault tolerance",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for CIRCUIT_BREAKERS - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 5,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "ERROR_LOGS",
      "display_name": "Log System Errors",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Log System Errors"
      ],
      "category": "Error Handling",
      "priority": "high",
      "description": "Comprehensive error logging and exception handling",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement Log System Errors throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on comprehensive error logging and exception handling",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for ERROR_LOGS - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "HTTP_CODES",
      "display_name": "HTTP Error Codes",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for HTTP Error Codes"
      ],
      "category": "API",
      "priority": "medium",
      "description": "Use appropriate HTTP status codes for API responses",
      "patterns_used": 7,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement HTTP Error Codes throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on use appropriate http status codes for api responses",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for HTTP_CODES - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 7,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "UI_ERROR_TOOLS",
      "display_name": "Client Error Tracking",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 0.0% (0/25 relevant files)",
        "Technology Filter: Using 25 relevant files (from 112 total files)",
        "Confidence: low",
        "No matches found for Client Error Tracking"
      ],
      "category": "Frontend",
      "priority": "medium",
      "description": "Integrate client-side error tracking tools",
      "patterns_used": 5,
      "matches_found": 0,
      "recommendations": [
        "Critical: Implement Client Error Tracking throughout your codebase",
        "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
        "Focus on integrate client-side error tracking tools",
        "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for UI_ERROR_TOOLS - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 25,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 25 relevant files (filtered from 112 total)"
      },
      "expected": 5,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "AUTOMATED_TESTS",
      "display_name": "Automated Tests",
      "status": "PASS",
      "score": 81.0,
      "details": [
        "Expected Coverage: 10% (Fallback expectation - LLM analysis unavailable for technology-specific estimation)",
        "Actual Coverage: 88.9% (16/18 relevant files)",
        "Technology Filter: Using 18 relevant files (from 112 total files)",
        "Confidence: low",
        "Found 490 matches across 16 files",
        "  src/test/java/org/springframework/samples/petclinic/MySqlIntegrationTests.java:21 - Test",
        "  src/test/java/org/springframework/samples/petclinic/MySqlIntegrationTests.java:24 - test",
        "  src/test/java/org/springframework/samples/petclinic/MySqlIntegrationTests.java:24 - Test",
        "  ... and 487 more matches"
      ],
      "category": "Testing",
      "priority": "high",
      "description": "Comprehensive automated test coverage",
      "patterns_used": 7,
      "matches_found": 490,
      "recommendations": [
        "Excellent implementation of Automated Tests",
        "Coverage exceeds expectations (88.9% vs 10%)",
        "Note: Coverage estimate has low confidence - manual review recommended",
        "Note: Analysis focused on 18 technology-relevant files (filtered from 112 total)"
      ],
      "pattern_description": "Fallback patterns for AUTOMATED_TESTS - basic implementation patterns",
      "pattern_significance": "These are fallback patterns when LLM analysis is unavailable. They provide basic coverage but may not be optimized for your specific technology stack.",
      "expected_coverage": {
        "percentage": 10,
        "reasoning": "Fallback expectation - LLM analysis unavailable for technology-specific estimation",
        "confidence": "low"
      },
      "actual_coverage": {
        "percentage": 0.0,
        "files_with_matches": 0,
        "relevant_files": 18,
        "total_files": 112,
        "technology_filtered": true
      },
      "coverage_analysis": {
        "gap": 10.0,
        "meets_expectation": false,
        "confidence_level": "low",
        "analysis_basis": "Based on 18 relevant files (filtered from 112 total)"
      },
      "expected": 7,
      "found": 490,
      "coverage": 81.0,
      "quality_score": 81.0,
      "matches": []
    }
  ],
  "score": 12.066666666666666,
  "overall_score": 12.066666666666666,
  "passed_gates": 2,
  "warning_gates": 0,
  "failed_gates": 13,
  "not_applicable_gates": 0,
  "total_applicable_gates": 15,
  "total_all_gates": 15,
  "critical_issues": [],
  "recommendations": [
    "Critical: Implement Logs Searchable/Available throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on ensure logs are structured and searchable for operational monitoring",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Good implementation of Avoid Logging Confidential Data",
    "Consider optimizing existing patterns",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Critical: Implement Create Audit Trail Logs throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on log critical business operations for audit compliance",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Critical: Implement Tracking ID for Logs throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on include correlation ids for distributed tracing",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Critical: Implement Log REST API Calls throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on log all api requests and responses for monitoring",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Critical: Implement Log Application Messages throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on log important application state changes and events",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Critical: Implement Client UI Errors Logged throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on capture and log client-side ui errors",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Critical: Implement Retry Logic throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on implement retry mechanisms for resilient operations",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Critical: Implement Timeouts in IO Ops throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on set appropriate timeouts for i/o operations",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Critical: Implement Throttling & Drop Request throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on implement rate limiting and request throttling",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Critical: Implement Circuit Breakers throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on implement circuit breaker pattern for fault tolerance",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Critical: Implement Log System Errors throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on comprehensive error logging and exception handling",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Critical: Implement HTTP Error Codes throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on use appropriate http status codes for api responses",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Critical: Implement Client Error Tracking throughout your codebase",
    "Expected 10% coverage, currently at 0.0% (based on 25 relevant files)",
    "Focus on integrate client-side error tracking tools",
    "Rationale: Fallback expectation - LLM analysis unavailable for technology-specific estimation",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 25 technology-relevant files (filtered from 112 total)",
    "Excellent implementation of Automated Tests",
    "Coverage exceeds expectations (88.9% vs 10%)",
    "Note: Coverage estimate has low confidence - manual review recommended",
    "Note: Analysis focused on 18 technology-relevant files (filtered from 112 total)"
  ]
}