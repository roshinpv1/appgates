{
  "report_metadata": {
    "scan_id": "f7547e84-2285-4393-b762-e3377e1a1e5b",
    "repository_url": "https://github.com/spring-projects/spring-petclinic",
    "branch": "main",
    "generated_at": "2025-07-13T12:15:43.610915",
    "version": "2.0.0",
    "llm_source": "local",
    "llm_model": "meta-llama-3.1-8b-instruct"
  },
  "scan_metadata": {
    "scan_duration": 0,
    "total_files": 112,
    "total_lines": 14402,
    "timestamp": "2025-07-13T12:15:43.610977",
    "project_name": "spring-projects/spring-petclinic",
    "project_path": "https://github.com/spring-projects/spring-petclinic",
    "repository_url": "https://github.com/spring-projects/spring-petclinic"
  },
  "languages_detected": [
    "Docker",
    "JSON",
    "YAML",
    "Batch",
    "XML",
    "Gradle",
    "Java",
    "SQL",
    "CSS",
    "HTML",
    "SCSS"
  ],
  "gates": [
    {
      "name": "STRUCTURED_LOGS",
      "display_name": "Logs Searchable/Available",
      "status": "FAIL",
      "score": 8.928571428571427,
      "details": [
        "Found 3 matches across 1 files",
        "  src/test/java/org/springframework/samples/petclinic/PostgresIntegrationTests.java:113 - log.info",
        "  src/test/java/org/springframework/samples/petclinic/PostgresIntegrationTests.java:129 - log.info",
        "  src/test/java/org/springframework/samples/petclinic/PostgresIntegrationTests.java:132 - log.info"
      ],
      "category": "Logging",
      "priority": "high",
      "description": "Ensure logs are structured and searchable for operational monitoring",
      "patterns_used": 5,
      "matches_found": 3,
      "recommendations": [
        "Implement Logs Searchable/Available throughout your codebase",
        "Focus on ensure logs are structured and searchable for operational monitoring"
      ],
      "expected": 5,
      "found": 3,
      "coverage": 8.928571428571427,
      "quality_score": 8.928571428571427,
      "matches": []
    },
    {
      "name": "AVOID_LOGGING_SECRETS",
      "display_name": "Avoid Logging Confidential Data",
      "status": "PASS",
      "score": 100.0,
      "details": [
        "No matches found for Avoid Logging Confidential Data"
      ],
      "category": "Security",
      "priority": "critical",
      "description": "Prevent sensitive data from being logged accidentally",
      "patterns_used": 6,
      "matches_found": 0,
      "recommendations": [
        "Good implementation of Avoid Logging Confidential Data",
        "Consider optimizing existing patterns"
      ],
      "expected": 6,
      "found": 0,
      "coverage": 100.0,
      "quality_score": 100.0,
      "matches": []
    },
    {
      "name": "AUDIT_TRAIL",
      "display_name": "Create Audit Trail Logs",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Create Audit Trail Logs"
      ],
      "category": "Compliance",
      "priority": "high",
      "description": "Log critical business operations for audit compliance",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Implement Create Audit Trail Logs throughout your codebase",
        "Focus on log critical business operations for audit compliance"
      ],
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "CORRELATION_ID",
      "display_name": "Tracking ID for Logs",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Tracking ID for Logs"
      ],
      "category": "Observability",
      "priority": "medium",
      "description": "Include correlation IDs for distributed tracing",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Implement Tracking ID for Logs throughout your codebase",
        "Focus on include correlation ids for distributed tracing"
      ],
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "LOG_API_CALLS",
      "display_name": "Log REST API Calls",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Log REST API Calls"
      ],
      "category": "API",
      "priority": "medium",
      "description": "Log all API requests and responses for monitoring",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Implement Log REST API Calls throughout your codebase",
        "Focus on log all api requests and responses for monitoring"
      ],
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "LOG_APPLICATION_MESSAGES",
      "display_name": "Log Application Messages",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Log Application Messages"
      ],
      "category": "Logging",
      "priority": "medium",
      "description": "Log important application state changes and events",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Implement Log Application Messages throughout your codebase",
        "Focus on log important application state changes and events"
      ],
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "UI_ERRORS",
      "display_name": "Client UI Errors Logged",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Client UI Errors Logged"
      ],
      "category": "Frontend",
      "priority": "medium",
      "description": "Capture and log client-side UI errors",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Implement Client UI Errors Logged throughout your codebase",
        "Focus on capture and log client-side ui errors"
      ],
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "RETRY_LOGIC",
      "display_name": "Retry Logic",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Retry Logic"
      ],
      "category": "Reliability",
      "priority": "high",
      "description": "Implement retry mechanisms for resilient operations",
      "patterns_used": 5,
      "matches_found": 0,
      "recommendations": [
        "Implement Retry Logic throughout your codebase",
        "Focus on implement retry mechanisms for resilient operations"
      ],
      "expected": 5,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "TIMEOUTS",
      "display_name": "Timeouts in IO Ops",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Timeouts in IO Ops"
      ],
      "category": "Reliability",
      "priority": "high",
      "description": "Set appropriate timeouts for I/O operations",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Implement Timeouts in IO Ops throughout your codebase",
        "Focus on set appropriate timeouts for i/o operations"
      ],
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "THROTTLING",
      "display_name": "Throttling & Drop Request",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Throttling & Drop Request"
      ],
      "category": "Performance",
      "priority": "medium",
      "description": "Implement rate limiting and request throttling",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Implement Throttling & Drop Request throughout your codebase",
        "Focus on implement rate limiting and request throttling"
      ],
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "CIRCUIT_BREAKERS",
      "display_name": "Circuit Breakers",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Circuit Breakers"
      ],
      "category": "Reliability",
      "priority": "high",
      "description": "Implement circuit breaker pattern for fault tolerance",
      "patterns_used": 5,
      "matches_found": 0,
      "recommendations": [
        "Implement Circuit Breakers throughout your codebase",
        "Focus on implement circuit breaker pattern for fault tolerance"
      ],
      "expected": 5,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "ERROR_LOGS",
      "display_name": "Log System Errors",
      "status": "FAIL",
      "score": 0.0,
      "details": [
        "No matches found for Log System Errors"
      ],
      "category": "Error Handling",
      "priority": "high",
      "description": "Comprehensive error logging and exception handling",
      "patterns_used": 4,
      "matches_found": 0,
      "recommendations": [
        "Implement Log System Errors throughout your codebase",
        "Focus on comprehensive error logging and exception handling"
      ],
      "expected": 4,
      "found": 0,
      "coverage": 0.0,
      "quality_score": 0.0,
      "matches": []
    },
    {
      "name": "HTTP_CODES",
      "display_name": "HTTP Error Codes",
      "status": "WARNING",
      "score": 35.71428571428571,
      "details": [
        "Found 14 matches across 4 files",
        "  src/test/java/org/springframework/samples/petclinic/MySqlIntegrationTests.java:29 - http.HttpStatus",
        "  src/test/java/org/springframework/samples/petclinic/MySqlIntegrationTests.java:71 - HttpStatus",
        "  src/test/java/org/springframework/samples/petclinic/PetClinicIntegrationTests.java:28 - http.HttpStatus",
        "  ... and 11 more matches"
      ],
      "category": "API",
      "priority": "medium",
      "description": "Use appropriate HTTP status codes for API responses",
      "patterns_used": 7,
      "matches_found": 14,
      "recommendations": [
        "Implement HTTP Error Codes throughout your codebase",
        "Focus on use appropriate http status codes for api responses"
      ],
      "expected": 7,
      "found": 14,
      "coverage": 35.71428571428571,
      "quality_score": 35.71428571428571,
      "matches": []
    },
    {
      "name": "UI_ERROR_TOOLS",
      "display_name": "Client Error Tracking",
      "status": "FAIL",
      "score": 8.928571428571427,
      "details": [
        "Found 2 matches across 1 files",
        "  src/test/java/org/springframework/samples/petclinic/system/CrashControllerIntegrationTests.java:70 - sEntry",
        "  src/test/java/org/springframework/samples/petclinic/system/CrashControllerIntegrationTests.java:72 - sEntry"
      ],
      "category": "Frontend",
      "priority": "medium",
      "description": "Integrate client-side error tracking tools",
      "patterns_used": 5,
      "matches_found": 2,
      "recommendations": [
        "Implement Client Error Tracking throughout your codebase",
        "Focus on integrate client-side error tracking tools"
      ],
      "expected": 5,
      "found": 2,
      "coverage": 8.928571428571427,
      "quality_score": 8.928571428571427,
      "matches": []
    },
    {
      "name": "AUTOMATED_TESTS",
      "display_name": "Automated Tests",
      "status": "PASS",
      "score": 100.0,
      "details": [
        "Found 497 matches across 17 files",
        "  src/main/java/org/springframework/samples/petclinic/owner/Owner.java:104 - test",
        "  src/main/java/org/springframework/samples/petclinic/owner/Owner.java:113 - test",
        "  src/main/java/org/springframework/samples/petclinic/owner/Owner.java:130 - test",
        "  ... and 494 more matches"
      ],
      "category": "Testing",
      "priority": "high",
      "description": "Comprehensive automated test coverage",
      "patterns_used": 7,
      "matches_found": 497,
      "recommendations": [
        "Good implementation of Automated Tests",
        "Consider optimizing existing patterns"
      ],
      "expected": 7,
      "found": 497,
      "coverage": 100.0,
      "quality_score": 100.0,
      "matches": []
    }
  ],
  "score": 16.904761904761905,
  "overall_score": 16.904761904761905,
  "passed_gates": 2,
  "warning_gates": 1,
  "failed_gates": 12,
  "critical_issues": [],
  "recommendations": [
    "Implement Logs Searchable/Available throughout your codebase",
    "Focus on ensure logs are structured and searchable for operational monitoring",
    "Good implementation of Avoid Logging Confidential Data",
    "Consider optimizing existing patterns",
    "Implement Create Audit Trail Logs throughout your codebase",
    "Focus on log critical business operations for audit compliance",
    "Implement Tracking ID for Logs throughout your codebase",
    "Focus on include correlation ids for distributed tracing",
    "Implement Log REST API Calls throughout your codebase",
    "Focus on log all api requests and responses for monitoring",
    "Implement Log Application Messages throughout your codebase",
    "Focus on log important application state changes and events",
    "Implement Client UI Errors Logged throughout your codebase",
    "Focus on capture and log client-side ui errors",
    "Implement Retry Logic throughout your codebase",
    "Focus on implement retry mechanisms for resilient operations",
    "Implement Timeouts in IO Ops throughout your codebase",
    "Focus on set appropriate timeouts for i/o operations",
    "Implement Throttling & Drop Request throughout your codebase",
    "Focus on implement rate limiting and request throttling",
    "Implement Circuit Breakers throughout your codebase",
    "Focus on implement circuit breaker pattern for fault tolerance",
    "Implement Log System Errors throughout your codebase",
    "Focus on comprehensive error logging and exception handling",
    "Implement HTTP Error Codes throughout your codebase",
    "Focus on use appropriate http status codes for api responses",
    "Implement Client Error Tracking throughout your codebase",
    "Focus on integrate client-side error tracking tools",
    "Good implementation of Automated Tests",
    "Consider optimizing existing patterns"
  ]
}