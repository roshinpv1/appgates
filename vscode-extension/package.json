{
  "name": "codegates",
  "displayName": "CodeGates - Hard Gate Validator",
  "description": "API-driven code quality analysis with enhanced pattern library, auto-scaling validation, and comprehensive gate assessment",
  "version": "2.2.0",
  "publisher": "codegates",
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/codegates"
  },
  "engines": {
    "vscode": "^1.80.0",
    "node": ">=16.0.0"
  },
  "categories": [
    "Linters",
    "Testing",
    "Other"
  ],
  "keywords": [
    "code quality",
    "hard gates",
    "validation",
    "security",
    "api",
    "remote analysis",
    "pattern matching",
    "coverage analysis",
    "gate applicability",
    "auto scaling",
    "kubernetes",
    "docker",
    "infrastructure validation"
  ],
  "activationEvents": [
    "onCommand:codegates.assess"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "codegates.configure",
        "title": "CodeGates: Configure",
        "category": "CodeGates",
        "icon": "$(settings-gear)"
      },
      {
        "command": "codegates.assess",
        "title": "CodeGates: Hard Gate Assessment",
        "category": "CodeGates",
        "icon": "$(search)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "codegates.configure"
        },
        {
          "command": "codegates.assess"
        }
      ]
    },
    "configuration": {
      "title": "CodeGates",
      "properties": {
        "codegates.apiUrl": {
          "type": "string",
          "default": "http://localhost:8000/api/v1",
          "description": "CodeGates API server URL (configurable for different environments)",
          "examples": [
            "http://localhost:8000/api/v1",
            "https://codegates.example.com/api/v1",
            "http://192.168.1.100:8000/api/v1"
          ]
        },
        "codegates.apiTimeout": {
          "type": "number",
          "default": 300,
          "description": "API request timeout in seconds (used for connection tests, scan requests, and polling)",
          "minimum": 30,
          "maximum": 3600
        },
        "codegates.apiRetries": {
          "type": "number",
          "default": 3,
          "description": "Number of API request retries",
          "minimum": 0,
          "maximum": 10
        },
        "codegates.enableEnhancedFeatures": {
          "type": "boolean",
          "default": true,
          "description": "Enable enhanced report features including pattern details, coverage analysis, and gate applicability"
        },
        "codegates.excellentThreshold": {
          "type": "number",
          "default": 80,
          "description": "Score threshold for 'excellent' status (from global config)",
          "minimum": 0,
          "maximum": 100
        },
        "codegates.goodThreshold": {
          "type": "number",
          "default": 60,
          "description": "Score threshold for 'good' status (from global config)",
          "minimum": 0,
          "maximum": 100
        },
        "codegates.defaultThreshold": {
          "type": "number",
          "default": 70,
          "description": "Default quality threshold (from global config)",
          "minimum": 0,
          "maximum": 100
        },
        "codegates.enableEnhancedPatternLibrary": {
          "type": "boolean",
          "default": true,
          "description": "Enable enhanced pattern library with criteria-based evaluation and comprehensive patterns"
        },
        "codegates.enableAutoScalingValidation": {
          "type": "boolean",
          "default": true,
          "description": "Enable auto-scaling validation including Kubernetes, Docker, and cloud provider patterns"
        },
        "codegates.enhancedEvaluationMode": {
          "type": "string",
          "default": "auto",
          "enum": ["auto", "enhanced", "legacy"],
          "description": "Evaluation mode: auto (use enhanced if available), enhanced (force enhanced), legacy (use legacy system)"
        },
        "codegates.includeInfrastructureValidation": {
          "type": "boolean",
          "default": true,
          "description": "Include infrastructure validation patterns (Kubernetes, Docker, cloud providers)"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run clean && npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "clean": "rm -rf out",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package"
  },
  "devDependencies": {
    "@types/node": "16.x",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@vscode/test-electron": "^2.3.0",
    "@vscode/vsce": "^2.19.0",
    "eslint": "^8.0.0",
    "typescript": "^5.2.0"
  },
  "dependencies": {
    "playwright": "^1.54.1"
  },
  "resolutions": {
    "minimatch": "^5.0.0",
    "glob": "^8.0.0",
    "brace-expansion": "^1.1.11"
  },
  "overrides": {
    "minimatch": "^5.0.0",
    "glob": "^8.0.0",
    "brace-expansion": "^1.1.11"
  }
}
